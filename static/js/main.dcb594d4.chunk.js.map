{"version":3,"sources":["components/calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","useState","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMA0CeA,MAtCf,WAEI,MAA8BC,mBAAS,IAAvC,mBACA,GADA,UAC8BA,mBAAS,KAAvC,mBAMA,OANA,UAMO,qCACH,sBAAKC,UAAU,SAAf,UACI,qBAAKA,UAAU,WAAf,kBACA,qBAAKA,UAAU,SAAf,sBAGJ,sBAAKA,UAAU,kBAAf,UACI,wBAAQA,UAAU,KAAlB,gBACA,wBAAQA,UAAU,MAAlB,iBACA,wBAAQA,UAAU,aAAlB,eACA,wBAAQA,UAAU,UAAlB,eACA,wBAAQA,UAAU,UAAlB,eACA,wBAAQA,UAAU,UAAlB,eACA,wBAAQA,UAAU,aAAlB,eACA,wBAAQA,UAAU,UAAlB,eACA,wBAAQA,UAAU,UAAlB,eACA,wBAAQA,UAAU,UAAlB,eACA,wBAAQA,UAAU,aAAlB,eACA,wBAAQA,UAAU,UAAlB,eACA,wBAAQA,UAAU,UAAlB,eACA,wBAAQA,UAAU,UAAlB,eACA,wBAAQA,UAAU,aAAlB,eACA,wBAAQA,UAAU,UAAlB,eACA,wBAAQA,UAAU,UAAlB,eACA,wBAAQA,UAAU,QAAlB,sB,MChBGC,MAff,WAIE,OACE,qBAAKD,UAAU,MAAf,SACE,qBAAKA,UAAU,sBAAf,SAEA,cAAC,EAAD,SCFSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.dcb594d4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n\r\nfunction Calculator() {\r\n\r\n    const [number1, setnumber1] = useState(\"\")\r\n    const [number2, setnumber2] = useState(\"\")\r\n\r\n\r\n\r\n\r\n\r\n    return <>\r\n        <div className=\"output\">\r\n            <div className=\"anterior\">dgdf</div>\r\n            <div className=\"actual\">dfgdg</div>\r\n        </div>\r\n\r\n        <div className=\"contain-buttons\">\r\n            <button className=\"ac\">AC</button>\r\n            <button className=\"del\">DEL</button>\r\n            <button className=\"operadores\">*</button>\r\n            <button className=\"numbers\">1</button>\r\n            <button className=\"numbers\">2</button>\r\n            <button className=\"numbers\">3</button>\r\n            <button className=\"operadores\">/</button>\r\n            <button className=\"numbers\">4</button>\r\n            <button className=\"numbers\">5</button>\r\n            <button className=\"numbers\">6</button>\r\n            <button className=\"operadores\">-</button>\r\n            <button className=\"numbers\">7</button>\r\n            <button className=\"numbers\">8</button>\r\n            <button className=\"numbers\">9</button>\r\n            <button className=\"operadores\">+</button>\r\n            <button className=\"numbers\">0</button>\r\n            <button className=\"numbers\">.</button>\r\n            <button className=\"igual\">=</button>\r\n        </div>\r\n    </>\r\n\r\n}\r\nexport default Calculator","import React from 'react';\n\nimport Calculator from './components/calculator';\nimport './App.css';\n\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"calculator-containt\">\n      \n      <Calculator/>\n\n      </div>\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}