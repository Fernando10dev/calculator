{"version":3,"sources":["components/calculator.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","useState","number1","setnumber1","number2","setnumber2","operador","setoperador","resultado","setresultado","clicknumber","value","clickoperador","val","className","onClick","slice","onclick","parseInt","document","querySelector","append","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sMAoFeA,MAhFf,WAEI,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAkCN,mBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAGIC,EAAa,SAACC,GACA,KAAbL,EACCH,EAAWD,EAASS,GAElBN,EAAWD,EAAQO,IAIrBC,EAAgB,SAACC,GACnBN,EAAYM,IAkChB,OAAO,qCACH,sBAAKC,UAAU,SAAf,UACI,qBAAKA,UAAU,WAAf,SAA2BR,EAAWJ,EAAUI,EAAU,MAC1D,qBAAKQ,UAAU,SAAf,SAAyBN,IAAyBF,EAAqBF,EAAVF,QAGjE,sBAAKY,UAAU,kBAAf,UACI,wBAAQC,QAtCD,WACXV,EAAW,IACXF,EAAW,IACXI,EAAY,IACZE,EAAa,KAkCkBK,UAAU,KAArC,gBACA,wBAAQC,QAhCH,WACO,KAAbT,EACHH,EAAWD,EAAQc,MAAM,GAAG,IAC1BX,EAAWD,EAAQY,MAAM,GAAG,KA6BFF,UAAU,MAAlC,iBACA,wBAAQC,QAAS,kBAAKH,EAAc,MAAKE,UAAU,aAAnD,eACA,wBAAQC,QAAS,kBAAML,EAAY,MAAKI,UAAU,UAAlD,eACA,wBAAQC,QAAS,kBAAML,EAAY,MAAMI,UAAU,UAAnD,eACA,wBAAQC,QAAS,kBAAML,EAAY,MAAMI,UAAU,UAAnD,eACA,wBAAQC,QAAS,kBAAKH,EAAc,MAAME,UAAU,aAApD,eACA,wBAAQC,QAAS,kBAAML,EAAY,MAAMI,UAAU,UAAnD,eACA,wBAAQC,QAAS,kBAAML,EAAY,MAAMI,UAAU,UAAnD,eACA,wBAAQC,QAAS,kBAAML,EAAY,MAAMI,UAAU,UAAnD,eACA,wBAAQC,QAAS,kBAAKH,EAAc,MAAME,UAAU,aAApD,eACA,wBAAQC,QAAS,kBAAML,EAAY,MAAMI,UAAU,UAAnD,eACA,wBAAQC,QAAS,kBAAML,EAAY,MAAMI,UAAU,UAAnD,eACA,wBAAQC,QAAS,kBAAME,QAAQ,MAAMH,UAAU,UAA/C,eACA,wBAAQC,QAAS,kBAAKH,EAAc,MAAME,UAAU,aAApD,eACA,wBAAQC,QAAS,kBAAML,EAAY,MAAMI,UAAU,UAAnD,eACA,wBAAQC,QAAS,kBAAML,EAAY,MAAMI,UAAU,UAAnD,eACA,wBAAQC,QA1CC,WACb,OAAQT,GACJ,IAAK,IACLG,EAAaS,SAAShB,GAAWgB,SAASd,IAC1C,MACA,IAAK,IACLK,EAAaS,SAAShB,GAAWgB,SAASd,IAC1C,MACA,IAAK,IACLK,EAAaS,SAAShB,GAAWgB,SAASd,IAC1C,MACA,IAAK,IACLK,EAAaS,SAAShB,GAAWgB,SAASd,IAG9Ce,SAASC,cAAc,aAAaC,OAAOjB,IA2BXU,UAAU,QAAtC,sB,MCnEGQ,MAPf,WAEE,OAAO,qBAAKR,UAAU,sBAAf,SACH,cAAC,EAAD,OCISS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFf,SAASgB,eAAe,SAM1BZ,K","file":"static/js/main.b76a2371.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n\r\nfunction Calculator() {\r\n\r\n    const [number1, setnumber1] = useState(\"\")\r\n    const [number2, setnumber2] = useState(\"\")\r\n    const [operador, setoperador] = useState(\"\")\r\n    const [resultado, setresultado] = useState(0)\r\n    \r\n\r\n  const clicknumber= (value) =>{\r\n      if(operador === \"\"){\r\n          setnumber1(number1+ value)\r\n        }else{\r\n            setnumber2(number2+value)\r\n        }\r\n  }\r\n\r\n    const clickoperador = (val) => {\r\n        setoperador(val)\r\n        \r\n    }\r\n    const cleanAll=()=>{\r\n        setnumber2(\"\")\r\n        setnumber1(\"\")\r\n        setoperador(\"\")\r\n        setresultado(\"\")\r\n    }\r\n\r\n    const clean= () =>{\r\n        if(operador === \"\"){\r\n        setnumber1(number1.slice(0,-1)) \r\n    }else{setnumber2(number2.slice(0,-1))}\r\n    }\r\n\r\n    const getresult= () =>{\r\n        switch (operador){\r\n            case \"+\": \r\n            setresultado(parseInt(number1) + parseInt(number2))\r\n            break;\r\n            case \"-\": \r\n            setresultado(parseInt(number1) - parseInt(number2))\r\n            break;\r\n            case \"/\": \r\n            setresultado(parseInt(number1) / parseInt(number2))\r\n            break;\r\n            case \"*\": \r\n            setresultado(parseInt(number1) * parseInt(number2))\r\n            break;\r\n        }\r\n        document.querySelector(\".anterior\").append(number2)\r\n    }\r\n\r\n    return <>\r\n        <div className=\"output\">\r\n            <div className=\"anterior\">{operador ? number1 + operador :\" \" }</div>\r\n            <div className=\"actual\">{resultado ? resultado :(!operador ? number1 : number2)}</div>\r\n        </div>\r\n\r\n        <div className=\"contain-buttons\">\r\n            <button onClick={cleanAll} className=\"ac\">AC</button>\r\n            <button onClick={clean} className=\"del\">DEL</button>\r\n            <button onClick={()=> clickoperador('*')}className=\"operadores\" >*</button>\r\n            <button onClick={() => clicknumber('1')}className=\"numbers\" >1</button>\r\n            <button onClick={() => clicknumber('2')} className=\"numbers\" >2</button>\r\n            <button onClick={() => clicknumber('3')} className=\"numbers\" >3</button>\r\n            <button onClick={()=> clickoperador('/')} className=\"operadores\" >/</button>\r\n            <button onClick={() => clicknumber('4')} className=\"numbers\" >4</button>\r\n            <button onClick={() => clicknumber('5')} className=\"numbers\" >5</button>\r\n            <button onClick={() => clicknumber('6')} className=\"numbers\" >6</button>\r\n            <button onClick={()=> clickoperador('-')} className=\"operadores\" >-</button>\r\n            <button onClick={() => clicknumber('8')} className=\"numbers\" >8</button>\r\n            <button onClick={() => clicknumber('7')} className=\"numbers\" >7</button>\r\n            <button onClick={() => onclick('9')} className=\"numbers\" >9</button>\r\n            <button onClick={()=> clickoperador('+')} className=\"operadores\" >+</button>\r\n            <button onClick={() => clicknumber('0')} className=\"numbers\">0</button>\r\n            <button onClick={() => clicknumber('.')} className=\"numbers\" >.</button>\r\n            <button onClick={getresult} className=\"igual\" >=</button>\r\n        </div>\r\n    </>\r\n\r\n}\r\nexport default Calculator","import React from 'react';\nimport Calculator from './components/calculator';\nimport './App.css';\n\n\nfunction App() {\n\n  return <div className=\"calculator-containt\">\n      <Calculator/>\n    </div>\n  \n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}